1. 피지컬로 승부하기
- 코딩 테스트에서 구현이란 : 머릿속에 있는 알고리즘을 소스 코드로 바꾸는 과정
- problem -> thinking -> solution 
- 알고리즘 문제를 전략 시뮬레이션 게임과 비교 할 때,
  게임에서 이길 전략을 완벽히 짰어도 그를 실현 할 수 있는 피지컬이 부족하다면 승리는 요원해짐

2. 특별히 어려운 문제란?
- 알고리즘은 간단한데 코드가 지나치게 길어지는 문제
- 특정 소수점 자리까지 출력해야 하는 문제
- 문자열이 입력으로 주어졌을 때 한 문자 단위로 끊어서 리스트에 넣어야 하는 문제
  (파싱이 필요한 문제)

3. 완전 탐색
- 모든 경우의 수를 주저 없이 다 계산하는 해결 방법을 의미

4. 시뮬레이션 
- 문제에서 제시한 알고리즘을 한 단계씩 차례대로 직접 수행해야 하는 문제 유형을 의미 

5. 구현시 고려해야 할 메모리 제약 사항
- C/C++ 에서 변수의 표현 범위를 알아둘 필요가 있음 

- 전통적으로 정수형은 int 를 사용하며 이 자료형의 크기는 4 bite 임
- 기본 int 자료형의 표현 범위는 -2,147,483,648 ~ 2,147,483,647 

- 크기가 8 bite 인 long 의 표현 범위는 9,223,372,036,854,775,807 까지 표현 가능
- 이보다 큰 수를 처리하기 위해서는 Java 의 BigInteger 클래스를 이용해야 함
  BigInteger 의 크기는 가변적이며 자료형의 범위 제한이 없음
  (표준 라이브러리로 지원함)
- 하지만 C++ 의 경우에는 표준 라이브러리로 지원하지 않음 
  따라서, 대체로 long long 에서 다룰 수 있는 수보다 더 큰 정수를 처리하는 문제는 출제 빈도가 낮음 

6. 파이썬의 경우
- 프로그래머가 직접 자료형을 지정할 필요가 없음
- 매우 큰 수의 연산 또한 기본으로 지원함
- 다만 실수의 연산에 대한 변수는 다른 언어와 마찬가지로 유효 숫자에 따라서 연산 결과가 달라짐

7. 파이썬에서 리스트의 크기 제약
- 대체로 코딩 테스트에서는 128 ~ 512 MB로 메모리를 제한함
- 알고리즘 문제중에서는 때때로 수백만 개 이상의 데이터 처리가 필요한 문제가 출제되곤 함
- 따라서 리스트 메모리 사용량을 알아둘 필요가 있음 

8. int 자료형 데이터 개수에 따른 메모리 사용량
- 데이터 갯수 (리스트의 길이) : 메모리 사용량
  1,000 : 약 4KB
  1,000,000 : 약 40MB
  1,000,000,000 : 약 40MB

9.